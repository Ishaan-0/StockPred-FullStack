{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/br0wot/Documents/yes/StockPred-FullStack/frontend/app/page.tsx"],"sourcesContent":["\"use client\";\nimport { TextField, Button, Autocomplete } from \"@mui/material\";\nimport { LineChart } from \"@mui/x-charts/LineChart\";\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport dayjs from \"dayjs\";\nimport { useState } from \"react\";\n\ninterface StockData {\n  historical_data: { date: string; price: number }[];\n  stock_prices: number[];\n  accuracy: number;\n} // {\"historical_data\": [{date: \"2024-04-1\", price: 1}, {date: \"2024-04-2\", price: 2}, {date: \"2024-04-3\", price: 3}] , \"stock_prices\":[1, 1, 1], \"accuracy\": 0.99}\n\nexport default function Home() {\n  const [stockData, setStockData] = useState<StockData | null>(null);\n  const [start_date, setStartDate] = useState(dayjs());\n  const [end_date, setEndDate] = useState(dayjs().add(10, \"day\"));\n\n  async function submissionHandle(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault(); // prevents reload of page\n    const symbol = event.currentTarget[\"symbol\"].value;\n    const start_date = event.currentTarget[\"start_date\"].value;\n    const end_date = event.currentTarget[\"end_date\"].value;\n    console.log(symbol, start_date, end_date);\n\n    const days = Math.floor(\n      (new Date(end_date).getTime() - new Date(start_date).getTime()) /\n        (1000 * 60 * 60 * 24),\n    );\n\n    const res = await fetch(\"/api/prediction\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ symbol, start_date, days }),\n    });\n    const data = await res.json();\n    const parsedData = JSON.parse(data);\n    setStockData(parsedData);\n  }\n\n  return (\n    <main className=\"flex flex-col gap-2 items-center w-screen h-screen overflow-auto\">\n      <h1 className=\"text-4xl text-center font-semibold p-4\">\n        Stock Prediction\n      </h1>\n      <p className=\"text-slate-600\">\n        This is a stock prediction app. It uses machine learning to predict the\n        stock prices.\n      </p>\n      <div className=\"flex gap-4 w-8/10 mt-4\">\n        <form\n          className=\"flex flex-col gap-3 w-4/10\"\n          onSubmit={submissionHandle}\n        >\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\n            <TextField\n              name=\"symbol\"\n              variant=\"outlined\"\n              required\n              label=\"Stock Symbol\"\n            />\n            <DatePicker\n              label=\"Start Date\"\n              name=\"start_date\"\n              format=\"YYYY-MM-DD\"\n              value={start_date}\n              onChange={(newValue) => setStartDate(dayjs(newValue))}\n            />\n            <DatePicker\n              label=\"End Date\"\n              name=\"end_date\"\n              format=\"YYYY-MM-DD\"\n              value={end_date}\n              onChange={(newValue) => setEndDate(dayjs(newValue))}\n            />\n            <Button type=\"submit\" variant=\"contained\">\n              Submit\n            </Button>\n          </LocalizationProvider>\n        </form>\n        <div>\n          {stockData && (\n            <LineChart\n              xAxis={[\n                {\n                  data: stockData.historical_data.map((d, i) => d.date),\n                },\n              ]}\n              series={[\n                { data: stockData.historical_data.map((d, i) => d.price) },\n              ]}\n              height={300}\n              width={600}\n            />\n          )}\n        </div>\n      </div>\n\n      <footer className=\"fixed py-1.5 px-3 rounded-full bottom-2 right-2 bg-slate-700 text-white\">\n        The predictions are in no way shape or form any financial advice,\n        bakchodi mat karo paiso ke saath\n      </footer>\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AANA;;;;;;;;AAce,SAAS;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoB;IAC7D,MAAM,CAAC,YAAY,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,UAAK,AAAD;IAChD,MAAM,CAAC,UAAU,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,UAAK,AAAD,IAAI,GAAG,CAAC,IAAI;IAExD,eAAe,iBAAiB,KAAuC;QACrE,MAAM,cAAc,IAAI,0BAA0B;QAClD,MAAM,SAAS,MAAM,aAAa,CAAC,SAAS,CAAC,KAAK;QAClD,MAAM,aAAa,MAAM,aAAa,CAAC,aAAa,CAAC,KAAK;QAC1D,MAAM,WAAW,MAAM,aAAa,CAAC,WAAW,CAAC,KAAK;QACtD,QAAQ,GAAG,CAAC,QAAQ,YAAY;QAEhC,MAAM,OAAO,KAAK,KAAK,CACrB,CAAC,IAAI,KAAK,UAAU,OAAO,KAAK,IAAI,KAAK,YAAY,OAAO,EAAE,IAC5D,CAAC,OAAO,KAAK,KAAK,EAAE;QAGxB,MAAM,MAAM,MAAM,MAAM,mBAAmB;YACzC,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAQ;gBAAY;YAAK;QAClD;QACA,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,aAAa,KAAK,KAAK,CAAC;QAC9B,aAAa;IACf;IAEA,qBACE,8OAAC;QAAK,WAAU;;0BACd,8OAAC;gBAAG,WAAU;0BAAyC;;;;;;0BAGvD,8OAAC;gBAAE,WAAU;0BAAiB;;;;;;0BAI9B,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,WAAU;wBACV,UAAU;kCAEV,cAAA,8OAAC,oMAAA,CAAA,uBAAoB;4BAAC,aAAa,oLAAA,CAAA,eAAY;;8CAC7C,8OAAC,mMAAA,CAAA,YAAS;oCACR,MAAK;oCACL,SAAQ;oCACR,QAAQ;oCACR,OAAM;;;;;;8CAER,8OAAC,gLAAA,CAAA,aAAU;oCACT,OAAM;oCACN,MAAK;oCACL,QAAO;oCACP,OAAO;oCACP,UAAU,CAAC,WAAa,aAAa,CAAA,GAAA,qIAAA,CAAA,UAAK,AAAD,EAAE;;;;;;8CAE7C,8OAAC,gLAAA,CAAA,aAAU;oCACT,OAAM;oCACN,MAAK;oCACL,QAAO;oCACP,OAAO;oCACP,UAAU,CAAC,WAAa,WAAW,CAAA,GAAA,qIAAA,CAAA,UAAK,AAAD,EAAE;;;;;;8CAE3C,8OAAC,0LAAA,CAAA,SAAM;oCAAC,MAAK;oCAAS,SAAQ;8CAAY;;;;;;;;;;;;;;;;;kCAK9C,8OAAC;kCACE,2BACC,8OAAC,qKAAA,CAAA,YAAS;4BACR,OAAO;gCACL;oCACE,MAAM,UAAU,eAAe,CAAC,GAAG,CAAC,CAAC,GAAG,IAAM,EAAE,IAAI;gCACtD;6BACD;4BACD,QAAQ;gCACN;oCAAE,MAAM,UAAU,eAAe,CAAC,GAAG,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK;gCAAE;6BAC1D;4BACD,QAAQ;4BACR,OAAO;;;;;;;;;;;;;;;;;0BAMf,8OAAC;gBAAO,WAAU;0BAA0E;;;;;;;;;;;;AAMlG","debugId":null}}]
}