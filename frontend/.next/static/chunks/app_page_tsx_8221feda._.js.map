{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ishaan/Documents/Stock-Prediction/frontend/app/page.tsx"],"sourcesContent":["\"use client\";\nimport { TextField, Button, Autocomplete } from \"@mui/material\";\nimport { LineChart } from \"@mui/x-charts/LineChart\";\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport dayjs from \"dayjs\";\nimport React, { useEffect } from \"react\";\n\nconst symbols = [\"AAPL\"];\n\ninterface StockData {\n  historical_data: number[];\n  stock_prices: number[];\n  accuracy: number;\n} // {\"historical_data\": [1, 1, 1] , \"stock_prices\":[1, 1, 1], \"accuracy\": 0.99}\n\nexport default function Home() {\n  const [stockData, setStockData] = React.useState<StockData | null>(null);\n\n  async function submissionHandle(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault(); // prevents reload of page\n    const symbol = event.currentTarget[\"symbol\"].value;\n    const start_date = dayjs(event.currentTarget[\"start_date\"].value).format(\n      \"YYYY-MM-DD\",\n    );\n    const end_date = dayjs(event.currentTarget[\"end_date\"].value).format(\n      \"YYYY-MM-DD\",\n    );\n    console.log(symbol, start_date, end_date);\n\n    const days = Math.floor(\n      (new Date(end_date).getTime() - new Date(start_date).getTime()) /\n        (1000 * 60 * 60 * 24),\n    );\n\n    const res = await fetch(\"/api/prediction\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ symbol, start_date, days }),\n    });\n    const data = await res.json();\n    const parsedData = JSON.parse(data);\n    setStockData(parsedData);\n  }\n\n  // useEffect(() => {\n  //   if (stockData) {\n  //     const parsedData =\n  //       typeof stockData === \"string\" ? JSON.parse(stockData) : stockData;\n  //     console.log(\"historical_data:\", parsedData.historical_data);\n  //   }\n  // }, [stockData]);\n\n  return (\n    <main className=\"flex flex-col gap-2 items-center w-screen h-screen overflow-auto\">\n      <h1 className=\"text-4xl text-center font-semibold p-4\">\n        Stock Prediction\n      </h1>\n      <p className=\"text-slate-600\">\n        This is a stock prediction app. It uses machine learning to predict the\n        stock prices.\n      </p>\n      <div className=\"flex gap-4 w-8/10 mt-4\">\n        <form\n          className=\"flex flex-col gap-3 w-4/10\"\n          onSubmit={submissionHandle}\n        >\n          <TextField\n            name=\"symbol\"\n            variant=\"outlined\"\n            required\n            label=\"Stock Symbol\"\n          />\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\n            <DatePicker\n              label=\"Start Date\"\n              name=\"start_date\"\n              defaultValue={dayjs()}\n            />\n            <DatePicker\n              label=\"End Date\"\n              name=\"end_date\"\n              defaultValue={dayjs().add(4, \"day\")}\n            />\n          </LocalizationProvider>\n          <Button type=\"submit\" variant=\"contained\">\n            Submit\n          </Button>\n        </form>\n        <div>\n          {stockData && (\n            <LineChart\n              xAxis={[\n                { data: stockData.historical_data.map((d, i) => i) },\n                { data: stockData.stock_prices.map((d, i) => i) },\n              ]}\n              series={[\n                { data: stockData.historical_data },\n                { data: stockData.stock_prices },\n              ]}\n              height={300}\n              width={600}\n            />\n          )}\n        </div>\n      </div>\n\n      <footer className=\"fixed py-1.5 px-3 rounded-full bottom-2 right-2 bg-slate-700 text-white\">\n        The predictions are in no way shape or form any financial advice,\n        bakchodi mat karo paiso ke saath\n      </footer>\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AANA;;;;;;;AAQA,MAAM,UAAU;IAAC;CAAO;AAQT,SAAS;;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,6JAAA,CAAA,UAAK,CAAC,QAAQ,CAAmB;IAEnE,eAAe,iBAAiB,KAAuC;QACrE,MAAM,cAAc,IAAI,0BAA0B;QAClD,MAAM,SAAS,MAAM,aAAa,CAAC,SAAS,CAAC,KAAK;QAClD,MAAM,aAAa,CAAA,GAAA,wIAAA,CAAA,UAAK,AAAD,EAAE,MAAM,aAAa,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,CACtE;QAEF,MAAM,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAK,AAAD,EAAE,MAAM,aAAa,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAClE;QAEF,QAAQ,GAAG,CAAC,QAAQ,YAAY;QAEhC,MAAM,OAAO,KAAK,KAAK,CACrB,CAAC,IAAI,KAAK,UAAU,OAAO,KAAK,IAAI,KAAK,YAAY,OAAO,EAAE,IAC5D,CAAC,OAAO,KAAK,KAAK,EAAE;QAGxB,MAAM,MAAM,MAAM,MAAM,mBAAmB;YACzC,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAQ;gBAAY;YAAK;QAClD;QACA,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,aAAa,KAAK,KAAK,CAAC;QAC9B,aAAa;IACf;IAEA,oBAAoB;IACpB,qBAAqB;IACrB,yBAAyB;IACzB,2EAA2E;IAC3E,mEAAmE;IACnE,MAAM;IACN,mBAAmB;IAEnB,qBACE,6LAAC;QAAK,WAAU;;0BACd,6LAAC;gBAAG,WAAU;0BAAyC;;;;;;0BAGvD,6LAAC;gBAAE,WAAU;0BAAiB;;;;;;0BAI9B,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,WAAU;wBACV,UAAU;;0CAEV,6LAAC,sMAAA,CAAA,YAAS;gCACR,MAAK;gCACL,SAAQ;gCACR,QAAQ;gCACR,OAAM;;;;;;0CAER,6LAAC,uMAAA,CAAA,uBAAoB;gCAAC,aAAa,uLAAA,CAAA,eAAY;;kDAC7C,6LAAC,mLAAA,CAAA,aAAU;wCACT,OAAM;wCACN,MAAK;wCACL,cAAc,CAAA,GAAA,wIAAA,CAAA,UAAK,AAAD;;;;;;kDAEpB,6LAAC,mLAAA,CAAA,aAAU;wCACT,OAAM;wCACN,MAAK;wCACL,cAAc,CAAA,GAAA,wIAAA,CAAA,UAAK,AAAD,IAAI,GAAG,CAAC,GAAG;;;;;;;;;;;;0CAGjC,6LAAC,6LAAA,CAAA,SAAM;gCAAC,MAAK;gCAAS,SAAQ;0CAAY;;;;;;;;;;;;kCAI5C,6LAAC;kCACE,2BACC,6LAAC,wKAAA,CAAA,YAAS;4BACR,OAAO;gCACL;oCAAE,MAAM,UAAU,eAAe,CAAC,GAAG,CAAC,CAAC,GAAG,IAAM;gCAAG;gCACnD;oCAAE,MAAM,UAAU,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,IAAM;gCAAG;6BACjD;4BACD,QAAQ;gCACN;oCAAE,MAAM,UAAU,eAAe;gCAAC;gCAClC;oCAAE,MAAM,UAAU,YAAY;gCAAC;6BAChC;4BACD,QAAQ;4BACR,OAAO;;;;;;;;;;;;;;;;;0BAMf,6LAAC;gBAAO,WAAU;0BAA0E;;;;;;;;;;;;AAMlG;GAnGwB;KAAA","debugId":null}}]
}